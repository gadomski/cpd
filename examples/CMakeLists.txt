project(cpd-examples CXX)
cmake_minimum_required(VERSION 2.8.12)
include(CMakeParseArguments)
set(DOCOPT_DIR "../vendor/docopt.cpp-af03fa0")

find_package(Cpd REQUIRED)
find_package(PDAL QUIET)

function(cpd_example name)
    set(options WITH_DOCOPT)
    set(multi_value_args LINK_LIBRARIES)
    cmake_parse_arguments(cpd_example "${options}" "" "${multi_value_args}" ${ARGN})

    set(target ${name}-example)
    set(src ${name}.cpp)
    if(cpd_example_WITH_DOCOPT)
        list(APPEND src "${DOCOPT_DIR}/docopt.cpp")
    endif()

    add_executable(${target} ${src})
    set_target_properties(${target} PROPERTIES OUTPUT_NAME ${name})
    target_link_libraries(${target} PRIVATE Cpd::Library-C++ ${cpd_example_LINK_LIBRARIES})
    if(cpd_example_WITH_DOCOPT)
        target_include_directories(${target} PRIVATE "${DOCOPT_DIR}")
    endif()
endfunction()

option(WITH_RIGID "Build the rigid registration example" ON)
if(${WITH_RIGID})
    cpd_example(rigid)
endif()

option(WITH_ARTIFICIAL_DISPLACEMENT "Build the artificial displacement example (requires PDAL)" ${PDAL_FOUND})
if(${WITH_ARTIFICIAL_DISPLACEMENT})
    find_package(PDAL REQUIRED)
    cpd_example(artificial-displacement WITH_DOCOPT LINK_LIBRARIES ${PDAL_LIBRARIES})
endif()
